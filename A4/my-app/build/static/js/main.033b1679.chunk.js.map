{"version":3,"sources":["components/NavBar.js","components/SideBar.js","components/MainContainer.js","components/ProjectsPanel.js","components/TeamsPanel.js","components/EmployeesPanel.js","components/Overview.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","href","this","props","title","Component","SideBar","highight","to","highlight","MainContainer","sidebar","children","ProjectsPanel","state","projects","fetch","then","res","json","setState","catch","err","console","log","map","project","activeDate","moment","diff","ProjectStartDate","key","_id","ProjectName","TeamsPanel","teams","team","TeamName","Employees","length","EmployeesPanel","employees","employee","FirstName","LastName","Position","PositionName","Overview","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.033b1679.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass NavBar extends Component{\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-inverse navbar-fixed-top\">\r\n            <div className=\"container-fluid\">\r\n            <div className=\"navbar-header\">\r\n              <a className=\"navbar-brand\" href=\"/\">{this.props.title}</a>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar; ","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass SideBar extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"col-sm-3 col-md-2  sidebar\">\r\n              <ul className=\"nav nav-sidebar\">\r\n                <li className={(this.props.highight === \"Overview\" ? 'active': '')}><Link to = \"/\">Overview <span className=\"sr-only\">(current)</span></Link></li>\r\n             </ul>\r\n\r\n              <ul className=\"nav nav-sidebar\">\r\n                <li className={(this.props.highlight === \"Projects\" ? 'active' : '')}><Link to=\"/projects\">Projects</Link></li>\r\n                <li className={(this.props.highlight === \"Teams\" ? 'active' : '')}><Link to=\"/teams\">Teams</Link></li>\r\n                <li className={(this.props.highlight === \"Employees\" ? 'active' : '')}><Link to=\"/employees\">Employees</Link></li>\r\n              </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport NavBar from './NavBar';\r\nimport SideBar from './SideBar';\r\n\r\nclass MainContainer extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t<div>\r\n\t\t<NavBar />\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<SideBar highlight= {this.props.sidebar} /> \r\n\t\t\t\t<div className=\" col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\r\n\t\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t\t\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MainContainer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'react-moment';\r\n\r\n\r\nclass ProjectsPanel extends Component{\r\nconstructor(){\r\n    super();\r\n    this.state = {\r\n        projects: []\r\n    }\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n    fetch('https://thawing-dawn-70314.herokuapp.com/projects').then(res => res.json()).then((res) => {\r\n        this.setState({\r\n            projects: res\r\n        });    \r\n    }).catch((err) => {\r\n        console.log(\"error\");\r\n    });\r\n}\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"panel panel-default\">\r\n                    <div className=\"panel-heading\">\r\n                      <h3 className=\"panel-title\">Projects</h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                      <div className=\"table-responsive overview-table\">\r\n                        <table className=\"table table-striped table-bordered\">\r\n                          <tbody>\r\n                          {this.state.projects.map(project => {\r\n                            let activeDate = moment().diff(moment(project.ProjectStartDate), 'days');\r\n                            return (\r\n                                <tr key={project._id}>\r\n                                    <td>{project.ProjectName}</td>\r\n                                    <td>{'Active '+ activeDate + ' days'}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      <Link to=\"/projects\" className=\"btn btn-primary form-control\">View All Project Data></Link>\r\n                    </div>\r\n                  </div>\r\n        )\r\n    }\r\n}\r\nexport default ProjectsPanel;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass TeamsPanel extends Component{\r\nconstructor(){\r\n    super();\r\n    this.state = {\r\n        teams: []\r\n    }\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n    fetch('https://thawing-dawn-70314.herokuapp.com/teams').then(res => res.json()).then((res) => {\r\n        this.setState({\r\n           teams: res\r\n        });    \r\n    }).catch((err) => {\r\n        console.log(\"error\");\r\n    });\r\n}\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"panel panel-default\">\r\n                    <div className=\"panel-heading\">\r\n                      <h3 className=\"panel-title\">Teams</h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                      <div className=\"table-responsive overview-table\">\r\n                        <table className=\"table table-striped table-bordered\">\r\n                          <tbody>\r\n                          {this.state.teams.map(team => {\r\n                            return (\r\n                                <tr key={team._id}>\r\n                                    <td>{team.TeamName}</td>\r\n                                    <td>{team.Employees.length + ' Employees'}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      <Link to=\"/teams\" className=\"btn btn-primary form-control\">View All Team Data></Link>\r\n                    </div>\r\n                  </div>\r\n        )\r\n    }\r\n}\r\nexport default TeamsPanel;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass EmployeesPanel extends Component{\r\nconstructor(){\r\n    super();\r\n    this.state = {\r\n        employees: []\r\n    }\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n    fetch('https://thawing-dawn-70314.herokuapp.com/employees').then(res => res.json()).then((res) => {\r\n        this.setState({\r\n            employees: res\r\n        });    \r\n    }).catch((err) => {\r\n        console.log(\"error\");\r\n    });\r\n}\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"panel panel-default\">\r\n                    <div className=\"panel-heading\">\r\n                      <h3 className=\"panel-title\">Employees</h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                      <div className=\"table-responsive overview-table\">\r\n                        <table className=\"table table-striped table-bordered\">\r\n                          <tbody>\r\n                          {this.state.employees.map(employee => {\r\n                            return (\r\n                                <tr key={employee._id}>\r\n                                    <td>{employee.FirstName + ' ' +employee.LastName}</td>\r\n                                    <td>{employee.Position.PositionName}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      <Link to=\"/employees\" className=\"btn btn-primary form-control\">View All Employee Data></Link>\r\n                    </div>\r\n                  </div>\r\n        )\r\n    }\r\n}\r\nexport default EmployeesPanel;","import React, { Component } from 'react';\r\nimport MainContainer from './MainContainer';\r\nimport ProjectsPanel from './ProjectsPanel';\r\nimport TeamsPanel from './TeamsPanel';\r\nimport EmployeesPanel from './EmployeesPanel';\r\n\r\n\r\nclass Overview extends Component{\r\n    render(){\r\n        return(\r\n            <MainContainer sidebar=\"Overview\">\r\n            <h1 className=\"page-header\">Overview</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <ProjectsPanel />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <TeamsPanel />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <EmployeesPanel />\r\n                    </div>\r\n                </div>\r\n            </MainContainer>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Overview;","import React, { Component } from 'react';\r\nimport Overview from './components/Overview';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Overview />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}